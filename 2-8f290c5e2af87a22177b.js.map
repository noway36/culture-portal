{"version":3,"sources":["webpack:///./src/components/Seo.js","webpack:///./src/components/Header/HeadLogo/HeadLogo.js","webpack:///./src/components/Header/Navigation/Navigation.js","webpack:///./src/translate/i18n.js","webpack:///./src/translate/translate.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/CreateLayout/Layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["SEO","_ref","description","lang","meta","title","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","HeadLogo","render","react_default","className","es","React","Component","withTranslation","Navigation","gatsby_browser_entry","to","Button","variant","color","fullWidth","i18n","use","initReactI18next","init","resources","en","translations","translationEN","be","translationBE","ru","translationRU","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","Translate","useTranslation","currentLanguage","language","classes","FormControl","style","display","alignItems","Select","value","onChange","event","locale","target","changeLanguage","inputProps","id","MenuItem","src","alt","Header","Header_HeadLogo_HeadLogo","Header_Navigation_Navigation","Layout","children","Fragment","components_Header_Header","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"2-8f290c5e2af87a22177b.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `,\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate=\"%s\"\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\r\nimport { withTranslation, Trans } from 'react-i18next';\r\n\r\nimport './head-logo.css';\r\n\r\nclass HeadLogo extends React.Component {\r\n\r\n    render() {\r\n        return <h1 className=\"head-logo\"><Trans>Photographers of Belarus</Trans></h1>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeadLogo);\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { withTranslation, Trans } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './navigation.css';\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navigation-container\">\r\n                <ul className=\"navigation\">\r\n                    <li className=\"navigation-link\">\r\n                        <Link to=\"/\">\r\n                            <Button variant='contained' color='primary' fullWidth={true}>\r\n                                <Trans>Home page</Trans>\r\n                            </Button>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"navigation-link\">\r\n                        <Link to=\"/search\">\r\n                            <Button variant='contained' color='primary' fullWidth={true}>\r\n                                <Trans>Search page</Trans>\r\n                            </Button>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Navigation);\r\n","import i18n from 'i18next';\r\n// import LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport translationEN from './lexicon/en.json';\r\nimport translationBE from './lexicon/be.json';\r\nimport translationRU from './lexicon/ru.json';\r\n\r\ni18n\r\n// .use(LanguageDetector) // use to set basic language of user's browser language\r\n    .use(initReactI18next)\r\n    .init({\r\n    // we init with resources\r\n        resources: {\r\n            en: {\r\n                translations: translationEN\r\n            },\r\n            be: {\r\n                translations: translationBE\r\n            },\r\n            ru: {\r\n                translations: translationRU\r\n            }\r\n        },\r\n        fallbackLng: 'ru',\r\n        debug: true,\r\n\r\n        // have a common namespace used around the full app\r\n        ns: ['translations'],\r\n        defaultNS: 'translations',\r\n\r\n        keySeparator: false, // we use content as keys\r\n\r\n        interpolation: {\r\n            escapeValue: false\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\n\nimport i18n from './i18n';\n\nimport './translate.css';\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 60,\n    },\n}));\n\nexport default function Translate() {\n    useTranslation();\n    const currentLanguage = i18n.language ? i18n.language : 'ru';\n    const classes = useStyles();\n\n    const changeLanguage = locale => {\n        i18n.changeLanguage(locale);\n    };\n\n    const handleChange = event => {\n        changeLanguage(`${event.target.value}`);\n    };\n\n    return (\n        <div className=\"language-select\">\n            <FormControl\n                className={classes.formControl}\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                }}\n            >\n                <Select\n                    value={currentLanguage}\n                    onChange={handleChange}\n                    inputProps={{\n                        name: 'lang',\n                        id: 'controlled-open-select',\n                    }}\n                >\n                    <MenuItem value=\"ru\">\n                        <img\n                            className=\"language-select-image\"\n                            src=\"/language_icons/russia.png\"\n                            alt=\"ru\"\n                        />\n                    </MenuItem>\n                    <MenuItem value=\"be\">\n                        <img\n                            className=\"language-select-image\"\n                            src=\"/language_icons/bel.png\"\n                            alt=\"be\"\n                        />\n                    </MenuItem>\n                    <MenuItem value=\"en\">\n                        <img\n                            className=\"language-select-image\"\n                            src=\"/language_icons/eng.png\"\n                            alt=\"en\"\n                        />\n                    </MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n","import React from 'react';\r\nimport HeadLogo from './HeadLogo/HeadLogo';\r\nimport Navigation from './Navigation/Navigation';\r\nimport Translate from '../../translate/translate';\r\n\r\nimport './header.css';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <HeadLogo />\r\n                <Navigation />\r\n                <Translate />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../Header/Header';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n    return (\n        <>\n            <Header />\n            <main className=\"main\">{children}</main>\n        </>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}